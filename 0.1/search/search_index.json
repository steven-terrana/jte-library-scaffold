{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"JTE Library Scaffold This repository serves as a scaffold to jumpstart a new set of libraries for the Jenkins Templating Engine (JTE) . It comes with some best practices baked in to help you get off on the right foot with JTE: JTE Library Scaffold Documentation Release Management Release Automation Automated Changelogs Unit Tests JaCoCo Integration Linting Documentation Release Management Release Automation Automated Changelogs Unit Tests JaCoCo Integration Linting","title":"JTE Library Scaffold"},{"location":"#jte-library-scaffold","text":"This repository serves as a scaffold to jumpstart a new set of libraries for the Jenkins Templating Engine (JTE) . It comes with some best practices baked in to help you get off on the right foot with JTE: JTE Library Scaffold Documentation Release Management Release Automation Automated Changelogs Unit Tests JaCoCo Integration Linting","title":"JTE Library Scaffold"},{"location":"#documentation","text":"","title":"Documentation"},{"location":"#release-management","text":"","title":"Release Management"},{"location":"#release-automation","text":"","title":"Release Automation"},{"location":"#automated-changelogs","text":"","title":"Automated Changelogs"},{"location":"#unit-tests","text":"","title":"Unit Tests"},{"location":"#jacoco-integration","text":"","title":"JaCoCo Integration"},{"location":"#linting","text":"","title":"Linting"},{"location":"contributing/","text":"Contributing Repository Structure Repository Component Description README.md Repository overview, gets compiled as the landing page for the documentation. CONTRIBUTING.md Explains how to develop against this repository libraries The base directory where the libraries are stored docs Documentation not specific to a particular library. Libary Structure Within the libraries directory, there are several components to be aware of: Component Description README.md The library's documentation page steps The steps contributed by the library resources Any reusable content for consumption by the library src The classes contributed by the library test The unit tests for the library For example, the current repository's maven library: libraries/maven \u251c\u2500\u2500 README.md \u251c\u2500\u2500 resources \u251c\u2500\u2500 src \u251c\u2500\u2500 steps \u2502 \u2514\u2500\u2500 build.groovy \u2514\u2500\u2500 test \u2514\u2500\u2500 BuildSpec.groovy Documentation This repository uses Material for MkDocs to build the documentation. Building the Docs To build the documentation, run: just build This will build the documentation and produce static html in the site directory. Live Reloading To see changes live as you make them, run: just serve The documentation will be accessible at http://localhost:8000. Running Tests To run all the tests, run: just test The gradle test report is published to target/reports/tests/test/index.html . For a specific library To run tests for a specific library, docker for example, run: just test '*docker*' For a specific Specification file To run tests for a specific Specification file, test/docker/BuildSpec.groovy for example, run: just test \"*.BuildSpec\"","title":"Contributing"},{"location":"contributing/#contributing","text":"","title":"Contributing"},{"location":"contributing/#repository-structure","text":"Repository Component Description README.md Repository overview, gets compiled as the landing page for the documentation. CONTRIBUTING.md Explains how to develop against this repository libraries The base directory where the libraries are stored docs Documentation not specific to a particular library.","title":"Repository Structure"},{"location":"contributing/#libary-structure","text":"Within the libraries directory, there are several components to be aware of: Component Description README.md The library's documentation page steps The steps contributed by the library resources Any reusable content for consumption by the library src The classes contributed by the library test The unit tests for the library For example, the current repository's maven library: libraries/maven \u251c\u2500\u2500 README.md \u251c\u2500\u2500 resources \u251c\u2500\u2500 src \u251c\u2500\u2500 steps \u2502 \u2514\u2500\u2500 build.groovy \u2514\u2500\u2500 test \u2514\u2500\u2500 BuildSpec.groovy","title":"Libary Structure"},{"location":"contributing/#documentation","text":"This repository uses Material for MkDocs to build the documentation.","title":"Documentation"},{"location":"contributing/#building-the-docs","text":"To build the documentation, run: just build This will build the documentation and produce static html in the site directory.","title":"Building the Docs"},{"location":"contributing/#live-reloading","text":"To see changes live as you make them, run: just serve The documentation will be accessible at http://localhost:8000.","title":"Live Reloading"},{"location":"contributing/#running-tests","text":"To run all the tests, run: just test The gradle test report is published to target/reports/tests/test/index.html .","title":"Running Tests"},{"location":"contributing/#for-a-specific-library","text":"To run tests for a specific library, docker for example, run: just test '*docker*'","title":"For a specific library"},{"location":"contributing/#for-a-specific-specification-file","text":"To run tests for a specific Specification file, test/docker/BuildSpec.groovy for example, run: just test \"*.BuildSpec\"","title":"For a specific Specification file"},{"location":"libraries/maven/","text":"Maven Steps Configuration Dependencies","title":"Maven"},{"location":"libraries/maven/#maven","text":"","title":"Maven"},{"location":"libraries/maven/#steps","text":"","title":"Steps"},{"location":"libraries/maven/#configuration","text":"","title":"Configuration"},{"location":"libraries/maven/#dependencies","text":"","title":"Dependencies"}]}